<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017 Huawei Technologies Co., Ltd
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.servicecomb.workshop.demo</groupId>
  <artifactId>company</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <modules>
    <module>manager</module>
    <module>doorman</module>
    <module>beekeeper</module>
    <module>worker</module>
    <module>docker-build-config</module>
    <module>docker-run-config</module>
    <module>integration-tests</module>
  </modules>

  <packaging>pom</packaging>

  <name>company</name>
  <description>Demo project for ServiceComb Java Chassis</description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.4.5.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <pact.version>3.2.13</pact.version>
    <cse.version>2.1.1</cse.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Camden.SR6</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.servicecomb</groupId>
        <artifactId>java-chassis-dependencies</artifactId>
        <version>0.1.1-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.servicecomb.workshop.demo</groupId>
        <artifactId>worker</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>io.servicecomb.workshop.demo</groupId>
        <artifactId>doorman</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>io.servicecomb.workshop.demo</groupId>
        <artifactId>beekeeper</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>io.servicecomb.workshop.demo</groupId>
        <artifactId>manager</artifactId>
        <version>0.0.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
      </dependency>
      <dependency>
        <groupId>com.github.seanyinx</groupId>
        <artifactId>unit-scaffolding</artifactId>
        <version>1.0.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock-standalone</artifactId>
        <version>2.6.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>2.4.9</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>au.com.dius</groupId>
        <artifactId>pact-jvm-consumer_2.11</artifactId>
        <version>${pact.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>au.com.dius</groupId>
        <artifactId>pact-jvm-consumer-junit_2.11</artifactId>
        <version>${pact.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>au.com.dius</groupId>
        <artifactId>pact-jvm-provider_2.11</artifactId>
        <version>${pact.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>au.com.dius</groupId>
        <artifactId>pact-jvm-provider-junit_2.11</artifactId>
        <version>${pact.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>au.com.dius</groupId>
        <artifactId>pact-jvm-model_2.11</artifactId>
        <version>${pact.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.codehaus.groovy.modules.http-builder</groupId>
            <artifactId>http-builder</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.zipkin.java</groupId>
      <artifactId>zipkin</artifactId>
      <version>1.24.0</version>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.commonjava.maven.plugins</groupId>
          <artifactId>directory-maven-plugin</artifactId>
          <version>0.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>gmaven-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.20.0</version>
        </plugin>
        <plugin>
          <groupId>com.github.odavid.maven.plugins</groupId>
          <artifactId>mixin-maven-plugin</artifactId>
          <version>0.1-alpha-39</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <systemPropertyVariables>
              <pact.rootDir>../target/pacts</pact.rootDir>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <compilerArgument>-parameters</compilerArgument>
            <encoding>UTF-8</encoding>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.eluder.coveralls</groupId>
          <artifactId>coveralls-maven-plugin</artifactId>
          <version>4.3.0</version>
          <configuration>
            <jacocoReports>
              <jacocoReport>
                ${project.basedir}/integration-tests/coverage-aggregate/target/site/jacoco-aggregate/jacoco.xml
              </jacocoReport>
            </jacocoReports>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.8</version>
          <executions>
            <execution>
              <id>default-prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/jacoco.exec</destFile>
              </configuration>
            </execution>
            <execution>
              <id>default-prepare-agent-integration</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                <propertyName>jacoco.failsafe.argLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>default-report</id>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>default-report-integration</id>
              <goals>
                <goal>report-integration</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>docker-machine</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <configuration>
                <machine>
                  <name>default</name>
                  <autoCreate>true</autoCreate>
                </machine>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>huaweicloud</id>
      <!--
      The dependencies of huawei CSE which provides the commercial features in huawei cloud.
      Please use this profile if you want to deploy the application into huawei cloud.
      -->
      <dependencies>
        <dependency>
          <groupId>com.huawei.paas.cse</groupId>
          <artifactId>foundation-auth</artifactId>
          <version>${cse.version}</version>
        </dependency>
        <dependency>
          <groupId>com.huawei.paas.cse</groupId>
          <artifactId>foundation-config-cc</artifactId>
          <version>${cse.version}</version>
        </dependency>
        <dependency>
          <groupId>com.huawei.paas.cse</groupId>
          <artifactId>cse-handler-tracing</artifactId>
          <version>${cse.version}</version>
        </dependency>
        <dependency>
          <groupId>com.huawei.paas.cse</groupId>
          <artifactId>cse-handler-performance-stats</artifactId>
          <version>${cse.version}</version>
        </dependency>
        <dependency>
          <groupId>com.huawei.paas.cse</groupId>
          <artifactId>cse-handler-cloud-extension</artifactId>
          <version>${cse.version}</version>
        </dependency>
      </dependencies>

      <repositories>
        <repository>
          <id>huawei_cloud_cse_dependencies</id>
          <name>huawei_cloud_cse_dependencies</name>
          <url>http://cse.servicecomb.io/maven</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>huawei_cloud_cse_dependencies</id>
          <name>huawei_cloud_cse_dependencies</name>
          <url>http://cse.servicecomb.io/maven</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>1.8</version>
              <executions>
                <execution>
                  <phase>compile</phase>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <configuration>
                    <tasks>
                      <copy file="../etc/microservice/${project.name}.yaml" tofile="${basedir}/target/classes/microservice.yaml" overwrite="true" />
                      <mkdir dir="${basedir}/target/classes/config" />
                      <copy file="../etc/log/log4j.${project.name}.properties" tofile="${basedir}/target/classes/config/log4j.${project.name}.properties" />
                    </tasks>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
    

</project>
